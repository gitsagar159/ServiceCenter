@model ServiceCenter.Models.CallRegistrationListDataModel
@using ServiceCenter.Models
@{
    Layout = null;
    string TodayDate = DateTime.Now.ToString("dd/MM/yyyy");

    decimal TotlaPayment = 0, TotalEstimate = 0, TotalVistingCharge = 0;
    int TotalCalls = 0;

    CallSummaryModel objCallSummaryModel;
}

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>User IW | OW | IN Item Vise Calls</title>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="IE=edge,chrome=1">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
    <link rel="icon" type="image/x-icon" href="favicon.ico">

    <link href="https://fonts.googleapis.com/css?family=Roboto:300,300i,400,400i,500,500i,700,700i,900" rel="stylesheet">

    <!-- Icon fonts -->
    <link rel="stylesheet" href="~/Content/assets/vendor/fonts/fontawesome.css">
    <link rel="stylesheet" href="~/Content/assets/vendor/fonts/ionicons.css">
    <link rel="stylesheet" href="~/Content/assets/vendor/fonts/linearicons.css">
    <link rel="stylesheet" href="~/Content/assets/vendor/fonts/open-iconic.css">
    <link rel="stylesheet" href="~/Content/assets/vendor/fonts/pe-icon-7-stroke.css">

    <!-- Core stylesheets -->
    <link rel="stylesheet" href="~/Content/assets/vendor/css/rtl/bootstrap.css" class="theme-settings-bootstrap-css">
    <link rel="stylesheet" href="~/Content/assets/vendor/css/rtl/appwork.css" class="theme-settings-appwork-css">
    <link rel="stylesheet" href="~/Content/assets/vendor/css/rtl/theme-corporate.css" class="theme-settings-theme-css">
    <link rel="stylesheet" href="~/Content/assets/vendor/css/rtl/colors.css" class="theme-settings-colors-css">
    <link rel="stylesheet" href="~/Content/assets/vendor/css/rtl/uikit.css">
    <link rel="stylesheet" href="~/Content/assets/css/demo.css">

    <script src="~/Content/assets/vendor/js/material-ripple.js"></script>
    <script src="~/Content/assets/vendor/js/layout-helpers.js"></script>

    <!-- Theme settings -->
    <!-- This file MUST be included after core stylesheets and layout-helpers.js in the <head> section -->
    <script src="~/Content/assets/vendor/js/theme-settings.js"></script>

    <!-- Core scripts -->
    <script src="~/Content/assets/vendor/js/pace.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <!-- Libs -->
    <link rel="stylesheet" href="~/Content/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css">

    <style>
        .card-table > thead:first-child > tr:first-child > td, .card-table > thead:first-child > tr:first-child > th, .card-table > tbody:first-child > tr:first-child > td, .card-table > tbody:first-child > tr:first-child > th, .card-table > tfoot:first-child > tr:first-child > td, .card-table > tfoot:first-child > tr:first-child > th {
            border-top: 0;
        }

        .table .thead-light th {
            color: #4E5155;
            background-color: rgba(24,28,33,0.03);
            border-color: #f1f1f2;
        }

        .table thead th {
            vertical-align: bottom;
            border-bottom: 2px solid #f1f1f2;
        }

        .card-table, .card-table th, .card-table td {
            border-color: rgba(24,28,33,0.06);
        }

        .table th {
            font-weight: 500;
        }

        .table th, .table td {
            padding: 0.625rem;
            vertical-align: top;
            border-top: 1px solid #f1f1f2;
        }

        th {
            display: table-cell;
            vertical-align: inherit;
            font-weight: bold;
            text-align: -internal-center;
        }

        table {
            border-collapse: separate;
            text-indent: initial;
            border-spacing: 2px;
        }

        .bg-info {
            background-color: #28c3d7 !important;
        }

        .bg-primary {
            background-color: #26B4FF !important;
        }

        .bg-danger {
            background-color: #d9534f !important;
            color: #fff;
        }
    </style>

</head>
<body>

    <div class="card">
        <div class="card-header">Daily Service Type Report Item Vise | From : @Model.FromDate - To : @Model.ToDate</div>
        <table class="table card-table table-responsive">
            <tbody>
                @{
                    if (Model.CallRegistrationList.Count > 0)
                    {
                        var CallListGroupByServiceType = Model.CallRegistrationList.GroupBy(i => i.ServType)
                                                    .Select(s => new { ServType = s.Key, Items = s.ToList() })
                                                    .ToList();



                        foreach (var ServiceItem in CallListGroupByServiceType)
                        {
                            string ServiceTypeName = ServiceItem.ServType == 0 ? "In-Warranty" : ServiceItem.ServType == 1 ? "Out-Warranty" : ServiceItem.ServType == 2 ? "Installation" : "";

                            <tr class="bg-danger">
                                <th scope="row" colspan="9" style="text-align:center"> @Html.Raw(ServiceTypeName)</th>
                            </tr>

                            var CallListGroupByItem = ServiceItem.Items.GroupBy(i => i.ItemName)
                                                    .Select(s => new { ItemName = s.Key, Items = s.ToList() })
                                                    .ToList();

                            foreach (var item in CallListGroupByItem)
                            {
                                <tr class="bg-info">
                                    <th scope="row" colspan="9" style="text-align:center"> @Html.Raw(item.ItemName)</th>
                                </tr>

                                List<CallRegistration> currentTechnicanCalls = item.Items;

                                objCallSummaryModel = new CallSummaryModel();

                                objCallSummaryModel.TotalCall = currentTechnicanCalls.Count;

                                objCallSummaryModel.InWarranty = currentTechnicanCalls.Where(x => x.ServType == 0).ToList().Count();
                                objCallSummaryModel.OutWarranty = currentTechnicanCalls.Where(x => x.ServType == 1).ToList().Count();
                                objCallSummaryModel.Installation = currentTechnicanCalls.Where(x => x.ServType == 2).ToList().Count();

                                objCallSummaryModel.Local = currentTechnicanCalls.Where(x => x.CallType == 0).ToList().Count();
                                objCallSummaryModel.Workshop = currentTechnicanCalls.Where(x => x.CallType == 1).ToList().Count();
                                objCallSummaryModel.OutStation = currentTechnicanCalls.Where(x => x.CallType == 2).ToList().Count();


                                objCallSummaryModel.Attended = currentTechnicanCalls.Where(x => x.CallAttn == true).ToList().Count();
                                objCallSummaryModel.GoAfterCall = currentTechnicanCalls.Where(x => x.GoAfterCall == true).ToList().Count();
                                objCallSummaryModel.CallBack = currentTechnicanCalls.Where(x => x.CallBack == true).ToList().Count();
                                objCallSummaryModel.WorkshopIn = currentTechnicanCalls.Where(x => x.WorkShopIN == true).ToList().Count();
                                objCallSummaryModel.Delever = currentTechnicanCalls.Where(x => x.Deliver == true).ToList().Count();
                                objCallSummaryModel.PartPending = currentTechnicanCalls.Where(x => x.PartPanding == true).ToList().Count();
                                objCallSummaryModel.RepeatFromTech = currentTechnicanCalls.Where(x => x.RepeatFromTech == true).ToList().Count();

                                objCallSummaryModel.JobDone = currentTechnicanCalls.Where(x => x.JobDone == true).ToList().Count();
                                objCallSummaryModel.AttendedButNotDone = currentTechnicanCalls.Where(x => x.CallAttn == true || x.Canceled == true || x.GoAfterCall == true && x.JobDone == false).ToList().Count();
                                objCallSummaryModel.PendingJob = currentTechnicanCalls.Where(x => x.CallAttn == false && x.Canceled == false && x.GoAfterCall == false && x.CallBack == false && x.WorkShopIN == false && x.Deliver == false && x.PartPanding == false && x.JobDone == false).ToList().Count();

                                objCallSummaryModel.Payment = currentTechnicanCalls.Sum(x => x.Payment);
                                objCallSummaryModel.Estimate = currentTechnicanCalls.Sum(x => x.Estimate);
                                objCallSummaryModel.VisitCharge = currentTechnicanCalls.Sum(x => x.VisitCharge);

                                <tr>
                                    <td colspan="3" style="text-align:center">Job Done : @objCallSummaryModel.JobDone </td>
                                    <td colspan="3" style="text-align:center">Call Attended But Not Done : @objCallSummaryModel.AttendedButNotDone </td>
                                    <td colspan="3" style="text-align:center">Pending Job : @objCallSummaryModel.PendingJob </td>
                                </tr>
                                <tr>
                                    <td>In-Warranty : @objCallSummaryModel.InWarranty</td>
                                    <td width="100"></td>
                                    <td>Local : @objCallSummaryModel.Local</td>
                                    <td width="100"></td>
                                    <td>Workshop-In : @objCallSummaryModel.WorkshopIn</td>
                                    <td width="100"></td>
                                    <td>Part Pending : @objCallSummaryModel.PartPending</td>
                                    <td width="100"></td>
                                    <td>Estimate : @objCallSummaryModel.Estimate</td>
                                </tr>
                                <tr>
                                    <td>Out-Warranty : @objCallSummaryModel.OutWarranty</td>
                                    <td width="100"></td>
                                    <td>Workshop : @objCallSummaryModel.Workshop</td>
                                    <td width="100"></td>
                                    <td>Delever : @objCallSummaryModel.Delever</td>
                                    <td width="100"></td>
                                    <td>Repeat From Technician : @objCallSummaryModel.RepeatFromTech</td>
                                    <td width="100"></td>
                                    <td>Visit Charge : @objCallSummaryModel.VisitCharge</td>
                                </tr>
                                <tr>
                                    <td>Installation : @objCallSummaryModel.Installation</td>
                                    <td width="100"></td>
                                    <td>Out-Station : @objCallSummaryModel.OutStation</td>
                                    <td width="100"></td>
                                    <td>Call Back : @objCallSummaryModel.CallBack</td>
                                    <td width="100"></td>
                                    <td>Go After Call : @objCallSummaryModel.GoAfterCall</td>
                                    <td width="100"></td>
                                    <td>Payment : @objCallSummaryModel.Payment</td>
                                </tr>

                            }




                        }



                    }
                }

            </tbody>
        </table>
    </div>

    <script src="~/Content/assets/vendor/libs/popper/popper.js"></script>
    <script src="~/Content/assets/vendor/js/bootstrap.js"></script>
    <script src="~/Content/assets/vendor/js/sidenav.js"></script>

    <!-- Libs -->
    <script src="~/Content/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>

    <!-- Demo -->
    <script src="~/Content/assets/js/demo.js"></script>
</body>
</html>
